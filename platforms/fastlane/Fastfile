# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.1.3"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
   end


  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta_build do
    # match(type: "appstore") # more information: https://codesigning.guide
    increment_build_number(xcodeproj:'/Users/u105791/AppDev/FastlaneApp/platforms/ios/FastlaneApp.xcodeproj')
    cert
    sigh
    gym(scheme: "FastlaneApp", project: "/Users/u105791/AppDev/FastlaneApp/platforms/ios/FastlaneApp.xcodeproj")# Build your app - more options available
    pilot(skip_waiting_for_build_processing: true)

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end


  desc "Submit a new Beta Build to Apple TestFlight - without build"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    #increment_build_number(xcodeproj:'/Users/u105791/AppDev/FastlaneApp/platforms/ios/FastlaneApp.xcodeproj')
    cert
    sigh
    #gym(scheme: "FastlaneApp", project: "/Users/u105791/AppDev/FastlaneApp/platforms/ios/FastlaneApp.xcodeproj")# Build your app - more options available
    pilot(skip_waiting_for_build_processing: true)

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    gym # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
   end


  desc "Submit a new Beta Build to Google Beta Store"
	lane :beta_build do
  	# Adjust the `build_type` and `flavor` params as needed to build the right APK for your setup
    gradle(task: 'assemble', build_type: 'Release', project_dir:'/Users/u105791/AppDev/FastlaneApp/platforms/android', gradle_path:'/Users/u105791/AppDev/FastlaneApp/platforms/android/gradlew')
  	supply(track: 'beta', apk_paths: '/Users/u105791/AppDev/FastlaneApp/platforms/android/build/outputs/apk/fastlaneApp_signed.apk')
  	# ...
	end

  desc "Just Supply to Google Beta Store"
  lane :supply_beta do
    supply(track: 'beta', apk_paths: '/Users/u105791/AppDev/FastlaneApp/platforms/android/build/outputs/apk/fastlaneApp_signed.apk')
    # ...
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end

# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
